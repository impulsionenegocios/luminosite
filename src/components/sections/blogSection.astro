---
// components/BlogSection.astro

import { Image } from 'astro:assets';
import Heading from '../typograph/Heading.astro';
import Paragraph from '../typograph/Paragraph.astro';
import Button from '../buttons/mainButton.astro';

interface BlogPost {
  image: string;
  category: string;
  title: string;
  excerpt: string;
  author: string;
  authorImage: string;
  publishDate: string;
  readTime: string;
  slug: string;
  tags: string[];
}

const {
  posts,
  showButton,
  sliceQtd,
  currentPage = 1,
  postsPerPage = 5,
  enablePagination = true,
} = Astro.props as {
  sliceQtd: number;
  showButton: boolean;
  posts: BlogPost[];
  currentPage?: number;
  postsPerPage?: number;
  enablePagination?: boolean;
};

// Pegar a p√°gina atual da URL se n√£o foi passada como prop
const urlPage = Astro.url.searchParams.get('page');
const actualCurrentPage = urlPage ? parseInt(urlPage) : currentPage;

// C√°lculos para pagina√ß√£o
const totalPosts = posts.length;
const totalPages = Math.ceil(totalPosts / postsPerPage);
const showPagination = enablePagination && totalPosts > postsPerPage;

// Posts para a p√°gina atual
let postsToShow;
if (enablePagination) {
  // Se pagina√ß√£o est√° habilitada, usar l√≥gica de pagina√ß√£o
  const startIndex = (actualCurrentPage - 1) * postsPerPage;
  const endIndex = startIndex + postsPerPage;
  const currentPosts = posts.slice(startIndex, endIndex);
  postsToShow = currentPosts;
} else {
  // Se pagina√ß√£o n√£o est√° habilitada, usar sliceQtd para limitar
  postsToShow = sliceQtd ? posts.slice(0, sliceQtd) : posts;
}

// Fun√ß√£o para gerar URLs de pagina√ß√£o
const getPageUrl = (page: number) => {
  const url = new URL(Astro.url);
  if (page === 1) {
    url.searchParams.delete('page');
  } else {
    url.searchParams.set('page', page.toString());
  }
  return url.pathname + url.search;
};

// Gerar n√∫meros de p√°gina para navega√ß√£o
const getPageNumbers = () => {
  const pages = [];
  const maxVisible = 5;

  if (totalPages <= maxVisible) {
    for (let i = 1; i <= totalPages; i++) {
      pages.push(i);
    }
  } else {
    if (actualCurrentPage <= 3) {
      for (let i = 1; i <= 4; i++) {
        pages.push(i);
      }
      pages.push('...');
      pages.push(totalPages);
    } else if (actualCurrentPage >= totalPages - 2) {
      pages.push(1);
      pages.push('...');
      for (let i = totalPages - 3; i <= totalPages; i++) {
        pages.push(i);
      }
    } else {
      pages.push(1);
      pages.push('...');
      for (let i = actualCurrentPage - 1; i <= actualCurrentPage + 1; i++) {
        pages.push(i);
      }
      pages.push('...');
      pages.push(totalPages);
    }
  }

  return pages;
};

const pageNumbers = getPageNumbers();
---

<section class="section blog bg-white relative overflow-hidden" id="blog">
  <!-- Shapes decorativas -->
  <div class="absolute z-0 w-[300px] h-[300px] rounded-full bg-primary-gold/5 -top-36 -left-36">
  </div>
  <div class="absolute z-0 w-[250px] h-[250px] rounded-full bg-primary-dark/3 -bottom-32 -right-32">
  </div>

  <!-- Linhas decorativas -->
  <div
    class="absolute top-[20%] left-[5%] w-[1px] h-[25%] bg-gradient-to-b from-transparent via-primary-gold to-transparent"
  >
  </div>
  <div
    class="absolute bottom-[20%] right-[8%] w-[1px] h-[30%] bg-gradient-to-b from-transparent via-primary-dark/20 to-transparent"
  >
  </div>

  <div class="container relative z-10">
    <div class="text-center mb-16 reveal-effect">
      <Heading text="Nosso" accent="Blog" />
      <div class="mt-4 max-w-2xl mx-auto">
        <Paragraph
          fontWeight="300"
          text="Conte√∫dos exclusivos sobre est√©tica, bem-estar e as √∫ltimas tend√™ncias em cuidados com a sa√∫de bucal."
        />
      </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">
      <!-- Post principal (primeiro post da p√°gina atual) -->
      {
        postsToShow.slice(0, 1).map((post) => (
          <div class="lg:col-span-2 blog-card-featured bg-white rounded-[25px] overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-700 reveal-effect group">
            <div class="grid lg:grid-cols-2 gap-0">
              <a href={`/blog/${post.slug}`}>
                <div class="relative h-64 lg:h-full overflow-hidden">
                  <Image
                    src={post.image}
                    alt={post.title}
                    width={600}
                    height={400}
                    class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                  />

                  {/* Badge de categoria */}
                  <div class="absolute top-4 left-4 bg-primary-gold text-white px-4 py-2 rounded-full text-sm font-medium">
                    {post.category}
                  </div>

                  {/* Overlay */}
                  <div class="absolute inset-0 bg-primary-dark/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
                </div>
              </a>

              {/* Conte√∫do */}
              <div class="p-8 flex flex-col justify-center">
                <div class="flex items-center gap-4 mb-4 text-sm text-gray-text">
                  <span class="flex items-center gap-2">
                    <span>üìÖ</span>
                    {post.publishDate}
                  </span>
                  <span class="flex items-center gap-2">
                    <span>‚è±Ô∏è</span>
                    {post.readTime}
                  </span>
                </div>

                <a href={`/blog/${post.slug}`}>
                  <h3 class="font-cormorant text-3xl font-semibold text-primary-dark mb-4 leading-tight group-hover:text-primary-gold transition-colors duration-300">
                    {post.title}
                  </h3>

                  <p class="text-gray-text leading-relaxed mb-6 font-light">{post.excerpt}</p>

                  {/* Tags */}
                  <div class="flex flex-wrap gap-2 mb-6">
                    {post.tags.slice(0, 3).map((tag) => (
                      <span class="bg-light-bg text-primary-dark px-3 py-1 rounded-full text-xs font-medium hover:bg-primary-gold hover:text-white transition-colors duration-300">
                        {tag}
                      </span>
                    ))}
                  </div>

                  {/* Autor */}
                  <div class="flex items-center justify-between">
                    <div class="flex items-center gap-3">
                      <Image
                        src={post.authorImage}
                        alt={post.author}
                        width={40}
                        height={40}
                        class="w-10 h-10 rounded-full object-cover"
                      />
                      <div>
                        <p class="font-medium text-primary-dark text-sm">{post.author}</p>
                        <p class="text-xs text-gray-text">Autor</p>
                      </div>
                    </div>
                    <div class="inline-flex items-center text-primary-gold hover:text-primary-dark font-medium text-sm transition-colors duration-300 group/link">
                      <span class="mr-2">Ler mais</span>
                      <svg
                        class="w-4 h-4 transition-transform duration-300 group-hover/link:translate-x-1"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M13 7l5 5m0 0l-5 5m5-5H6"
                        />
                      </svg>
                    </div>
                  </div>
                </a>
              </div>
            </div>
          </div>
        ))
      }

      {/* Posts secund√°rios */}
      {
        postsToShow.slice(1).map((post) => (
          <div class="blog-card bg-white rounded-[20px] overflow-hidden shadow-lg hover:shadow-xl transition-all duration-500 hover:-translate-y-3 reveal-effect group">
            {/* Imagem */}
            <div class="relative h-48 overflow-hidden">
              <Image
                src={post.image}
                alt={post.title}
                width={400}
                height={250}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
              />

              {/* Badge de categoria */}
              <div class="absolute top-3 left-3 bg-primary-gold text-white px-3 py-1 rounded-full text-xs font-medium">
                {post.category}
              </div>

              {/* Data */}
              <div class="absolute bottom-3 right-3 bg-white/90 backdrop-blur-sm text-primary-dark px-3 py-1 rounded-full text-xs font-medium">
                {post.publishDate}
              </div>
            </div>

            {/* Conte√∫do */}
            <div class="p-6">
              <a href={`/blog/${post.slug}`}>
                <h4 class="font-cormorant text-xl font-semibold text-primary-dark mb-3 leading-tight group-hover:text-primary-gold transition-colors duration-300">
                  {post.title}
                </h4>

                <p class="text-gray-text text-sm leading-relaxed mb-4 font-light line-clamp-3">
                  {post.excerpt}
                </p>
              </a>

              {/* Autor e read time */}
              <div class="flex items-center justify-between pt-4 border-t border-gray-100">
                <div class="flex items-center gap-2">
                  <Image
                    src={post.authorImage}
                    alt={post.author}
                    width={24}
                    height={24}
                    class="w-6 h-6 rounded-full object-cover"
                  />
                  <span class="text-xs text-gray-text">{post.author}</span>
                </div>

                <div class="flex items-center gap-3 text-xs text-gray-text">
                  <span>‚è±Ô∏è {post.readTime}</span>
                  <a
                    href={`/blog/${post.slug}`}
                    class="text-primary-gold hover:text-primary-dark transition-colors duration-300 font-medium"
                  >
                    Ler ‚Üí
                  </a>
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>

    {/* Pagina√ß√£o */}
    {
      showPagination && (
        <div class="flex flex-col items-center space-y-6 mt-16 reveal-effect">
          {/* Informa√ß√µes da pagina√ß√£o */}
          <div class="text-center">
            <p class="text-sm text-gray-text font-light">
              Mostrando{' '}
              <span class="font-medium text-primary-dark">
                {enablePagination ? (actualCurrentPage - 1) * postsPerPage + 1 : 1}
              </span>{' '}
              a{' '}
              <span class="font-medium text-primary-dark">
                {enablePagination
                  ? Math.min(actualCurrentPage * postsPerPage, totalPosts)
                  : Math.min(postsToShow.length, totalPosts)}
              </span>{' '}
              de <span class="font-medium text-primary-dark">{totalPosts}</span> posts
            </p>
          </div>

          {/* Navega√ß√£o da pagina√ß√£o */}
          <nav class="flex items-center justify-center space-x-2" aria-label="Pagina√ß√£o">
            {/* Bot√£o Anterior */}
            {actualCurrentPage > 1 && (
              <a
                href={getPageUrl(actualCurrentPage - 1)}
                class="pagination-btn pagination-nav group"
                aria-label="P√°gina anterior"
              >
                <svg
                  class="w-4 h-4 transition-transform duration-300 group-hover:-translate-x-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 19l-7-7 7-7"
                  />
                </svg>
                <span class="ml-2 hidden sm:inline">Anterior</span>
              </a>
            )}

            {/* N√∫meros das p√°ginas */}
            <div class="flex items-center space-x-1">
              {pageNumbers.map((pageNum) =>
                pageNum === '...' ? (
                  <span class="px-3 py-2 text-gray-text">...</span>
                ) : (
                  <a
                    href={getPageUrl(pageNum as number)}
                    class={`pagination-btn ${pageNum === actualCurrentPage ? 'pagination-active' : 'pagination-inactive'}`}
                    aria-label={`P√°gina ${pageNum}`}
                    aria-current={pageNum === actualCurrentPage ? 'page' : undefined}
                  >
                    {pageNum}
                  </a>
                ),
              )}
            </div>

            {/* Bot√£o Pr√≥ximo */}
            {actualCurrentPage < totalPages && (
              <a
                href={getPageUrl(actualCurrentPage + 1)}
                class="pagination-btn pagination-nav group"
                aria-label="Pr√≥xima p√°gina"
              >
                <span class="mr-2 hidden sm:inline">Pr√≥ximo</span>
                <svg
                  class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </a>
            )}
          </nav>

          {/* Navega√ß√£o r√°pida (opcional) */}
          {totalPages > 5 && (
            <div class="flex items-center space-x-4 text-sm">
              <span class="text-gray-text font-light">Ir para p√°gina:</span>
              <div class="relative">
                <select class="pagination-select" onchange="window.location.href = this.value">
                  {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (
                    <option value={getPageUrl(pageNum)} selected={pageNum === currentPage}>
                      {pageNum}
                    </option>
                  ))}
                </select>
              </div>
            </div>
          )}
        </div>
      )
    }

    {
      showButton && !showPagination && (
        <div class="text-center mt-12 reveal-effect">
          <Button title="Ver todos os posts" href="/blog" />
        </div>
      )
    }
  </div>
</section>

<style>
  .blog-card,
  .blog-card-featured {
    position: relative;
  }

  .blog-card::before,
  .blog-card-featured::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(145deg, transparent 0%, rgba(201, 168, 116, 0.01) 100%);
    opacity: 0;
    transition: opacity 0.5s ease;
    pointer-events: none;
  }

  .blog-card:hover::before,
  .blog-card-featured:hover::before {
    opacity: 1;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Estilos da Pagina√ß√£o */
  .pagination-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 8px 16px;
    font-size: 14px;
    font-weight: 500;
    border-radius: 9999px;
    transition: all 0.3s ease;
    min-width: 40px;
    height: 40px;
    text-decoration: none;
  }

  .pagination-active {
    background-color: var(--primary-gold, #c9a874);
    color: white;
    box-shadow: 0 10px 25px rgba(201, 168, 116, 0.4);
    transform: scale(1.05);
  }

  .pagination-inactive {
    background-color: white;
    color: var(--primary-dark, #2c3e50);
    border: 1px solid #e5e7eb;
    transition: all 0.3s ease;
  }

  .pagination-inactive:hover {
    background-color: var(--primary-gold, #c9a874);
    color: white;
    border-color: var(--primary-gold, #c9a874);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }

  .pagination-nav {
    background-color: white;
    color: var(--primary-dark, #2c3e50);
    border: 1px solid #e5e7eb;
    transition: all 0.3s ease;
  }

  .pagination-nav:hover {
    background-color: var(--primary-dark, #2c3e50);
    color: white;
    border-color: var(--primary-dark, #2c3e50);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .pagination-select {
    background-color: white;
    border: 1px solid #e5e7eb;
    border-radius: 9999px;
    padding: 8px 16px;
    font-size: 14px;
    color: var(--primary-dark, #2c3e50);
    outline: none;
    transition: all 0.3s ease;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 12px center;
    background-repeat: no-repeat;
    background-size: 16px;
    padding-right: 40px;
    appearance: none;
  }

  .pagination-select:hover {
    border-color: var(--primary-gold, #c9a874);
    background-color: rgba(201, 168, 116, 0.05);
  }

  .pagination-select:focus {
    border-color: var(--primary-gold, #c9a874);
    box-shadow: 0 0 0 3px rgba(201, 168, 116, 0.1);
  }

  /* Responsividade da pagina√ß√£o */
  @media (max-width: 640px) {
    .pagination-btn {
      padding: 6px 12px;
      font-size: 12px;
      min-width: 36px;
      height: 36px;
    }

    nav[aria-label='Pagina√ß√£o'] {
      gap: 4px;
    }

    nav[aria-label='Pagina√ß√£o'] > div {
      gap: 4px;
    }
  }

  #blog {
    zoom: 0.9;
  }

  /* Anima√ß√£o de entrada para a pagina√ß√£o */
  .reveal-effect {
    opacity: 0;
    transform: translateY(20px);
    animation: revealUp 0.8s ease-out forwards;
  }

  @keyframes revealUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Delay para elementos de pagina√ß√£o */
  .pagination-btn:nth-child(1) {
    animation-delay: 0.1s;
  }
  .pagination-btn:nth-child(2) {
    animation-delay: 0.15s;
  }
  .pagination-btn:nth-child(3) {
    animation-delay: 0.2s;
  }
  .pagination-btn:nth-child(4) {
    animation-delay: 0.25s;
  }
  .pagination-btn:nth-child(5) {
    animation-delay: 0.3s;
  }
</style>
